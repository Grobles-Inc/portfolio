---
import { Github, Linkedin, Menu } from "@lucide/astro";
import { SITE_TITLE } from "../consts";

const navLinks = [
	{ href: "/", label: "Inicio" },
	{ href: "/about", label: "Nosotros" },
	{ href: "/services", label: "Servicios" },
	{ href: "/projects", label: "Proyectos" },
];

const socialLinks = [
	{
		href: "https://linkedin.com/company/grobles",
		label: "LinkedIn",
		icon: Linkedin,
	},
	{
		href: "https://github.com/grobles",
		label: "GitHub",
		icon: Github,
	},
];
---

<header
	id="main-header"
	class="navbar bg-base-100 shadow-lg fixed top-0 z-50 w-full transition-transform duration-300"
>
	<div class="max-w-7xl mx-auto w-full px-4 flex flex-row justify-between">
		<!-- Logo -->
		<div class="navbar-start gap-2">
			<a
				href="/"
				aria-label="Grobles Home"
				class="flex items-center navbar-start"
			>
				<img
					src="/grobles.png"
					alt="Grobles Logo"
					class="size-14 rounded-lg object-cover"
					loading="lazy"
					decoding="async"
				/>
				<span
					class="font-bold text-lg md:text-xl font-poppins text-base-content"
				>
					{SITE_TITLE}
				</span>
			</a>
		</div>

		<!-- Desktop Navigation -->
		<div class="navbar-center hidden lg:flex">
			<ul class="flex gap-2">
				{
					navLinks.map(({ href, label }) => (
						<li>
							<a
								href={href}
								class={`px-4 py-2 rounded-lg font-medium transition-colors ${
									Astro.url.pathname === href
										? "bg-primary/10 text-primary font-semibold shadow-none"
										: "hover:bg-base-200 text-base-content"
								}`}
								aria-current={Astro.url.pathname === href ? "page" : undefined}
							>
								{label}
							</a>
						</li>
					))
				}
			</ul>
		</div>

		<!-- Desktop Actions -->
		<div class="navbar-end hidden lg:flex gap-2 items-center">
			{
				socialLinks.map(({ href, label, icon: Icon }) => (
					<a
						href={href}
						target="_blank"
						rel="noopener noreferrer"
						aria-label={label}
						class="btn btn-ghost btn-circle"
					>
						<Icon class="w-5 h-5" />
					</a>
				))
			}
			<a href="/contact" class="btn btn-primary px-5 font-semibold"
				>Contáctanos</a
			>
		</div>

		<!-- Mobile Menu -->
		<div class="navbar-end lg:hidden">
			<div class="dropdown dropdown-end">
				<div
					tabindex="0"
					role="button"
					class="btn btn-ghost btn-circle"
					aria-label="Toggle menu"
				>
					<Menu class="w-6 h-6" />
				</div>
				<ul
					tabindex="0"
					class="menu menu-sm dropdown-content bg-base-100 rounded-box z-[1] mt-3 w-52 p-2 shadow"
				>
					{
						navLinks.map(({ href, label }) => (
							<li>
								<a
									href={href}
									class={`px-4 py-2 rounded-lg font-medium ${
										Astro.url.pathname === href
											? "bg-primary/10 text-primary font-semibold"
											: "hover:bg-base-200 text-base-content"
									}`}
									aria-current={
										Astro.url.pathname === href ? "page" : undefined
									}
								>
									{label}
								</a>
							</li>
						))
					}
					<li><hr class="my-2" /></li>
					<li>
						<a
							href="/contact"
							class="btn btn-primary btn-sm w-full font-semibold">Contáctanos</a
						>
					</li>
					<li class="flex flex-row gap-2 justify-center pt-2">
						{
							socialLinks.map(({ href, label, icon: Icon }) => (
								<a
									href={href}
									target="_blank"
									rel="noopener noreferrer"
									aria-label={label}
									class="btn btn-ghost btn-circle btn-sm"
								>
									<Icon class="w-4 h-4" />
								</a>
							))
						}
					</li>
				</ul>
			</div>
		</div>
	</div>
</header>

<script>
	const header = document.getElementById("main-header");
	const drawerCheckbox = document.querySelector(
		'.dropdown input[type="checkbox"]',
	) as HTMLInputElement;

	if (header) {
		let lastScrollY = window.scrollY;

		const handleScroll = () => {
			const currentScrollY = window.scrollY;

			if (currentScrollY > lastScrollY && currentScrollY > 100) {
				header.classList.add("-translate-y-full");
				if (drawerCheckbox) {
					drawerCheckbox.checked = false;
				}
			} else {
				header.classList.remove("-translate-y-full");
			}
			lastScrollY = currentScrollY;
		};

		window.addEventListener("scroll", handleScroll);
	}
</script>
